#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct {
    char **items;
    int top;
} Stack;
Stack* createStack(int capacity) {
    Stack *st = malloc(sizeof(Stack));
    st->items = malloc(capacity * sizeof(char*));
    st->top = -1;
    return st;
}
void push(Stack *st, char *s) {
    st->items[++st->top] = s;
}
char* pop(Stack *st) {
    if (st->top >= 0) return st->items[st->top--];
    return NULL;
}
int main(void) {
    int q;
    if (scanf("%d", &q) != 1) return 0;
    char *text = calloc(1, sizeof(char));  
    Stack *history = createStack(q);
    while (q--) {
        int type;
        scanf("%d", &type);
        if (type == 1) {
            char buf[1000001];
            scanf("%1000000s", buf);
            push(history, strdup(text));
            size_t newLen = strlen(text) + strlen(buf) + 1;
            text = realloc(text, newLen);
            strcat(text, buf);
        } else if (type == 2) {
            int k;
            scanf("%d", &k);
            push(history, strdup(text));
            int len = strlen(text);
            text[len - k] = '\0';
        } else if (type == 3) {
            int k;
            scanf("%d", &k);
            printf("%c\n", text[k - 1]);
        } else if (type == 4) {
            free(text);
            text = pop(history);
        }
    }
    free(text);
    while (history->top >= 0) {
        free(pop(history));
    }
    free(history->items);
    free(history);
    return 0;
}
