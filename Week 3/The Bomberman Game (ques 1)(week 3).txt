#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define BOMB 'O'
#define EMPTY '.'
char **detonate(int rows, int cols, char **grid) {
    char **res = malloc(rows * sizeof(char*));
    for (int i = 0; i < rows; i++) {
        res[i] = malloc(cols + 1);
        for (int j = 0; j < cols; j++) {
            res[i][j] = BOMB;
        }
        res[i][cols] = '\0';
    }
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (grid[i][j] == BOMB) {
                res[i][j] = EMPTY;
                if (i > 0) res[i-1][j] = EMPTY;
                if (i < rows-1) res[i+1][j] = EMPTY;
                if (j > 0) res[i][j-1] = EMPTY;
                if (j < cols-1) res[i][j+1] = EMPTY;
            }
        }
    }
    return res;
}
int main(void) {
    int R, C;
    long long N;
    scanf("%d %d %lld", &R, &C, &N);
    char **grid0 = malloc(R * sizeof(char*));
    for (int i = 0; i < R; i++) {
        grid0[i] = malloc(C + 1);
        scanf("%s", grid0[i]);
    }
     if (N == 1) {
        for (int i = 0; i < R; i++) {
            printf("%s\n", grid0[i]);
        }
        return 0;
    }
    if (N % 2 == 0) {
        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                putchar(BOMB);
            }
            putchar('\n');
        }
        return 0;
    }
    char **t3 = detonate(R, C, grid0);
    char **t5 = detonate(R, C, t3);
    char **ans = (N % 4 == 3) ? t3 : t5;
    for (int i = 0; i < R; i++) {
        printf("%s\n", ans[i]);
    }
    return 0;
}
